@{
    ViewData["Title"] = "Get Bodied Nerd";
    string eventTime = "";
    string eventName = "";
    int columnCounter = 0;
    int rowCounter = 0;
    string eventDay = "";
    int dayCounter = 1;
    int daysToSkip = 0;
    int cellCount = 0;
    int eventId = 0;
    string eventStartTime = "";
    string eventEndTime = "";
    string eventTitle = "";
    DateTime currentDate = DateTime.Now;
    DateTime endOfMonth = new DateTime(currentDate.Year,
                                   ViewBag.currentMonth,
                                   DateTime.DaysInMonth(currentDate.Year,
                                                        ViewBag.currentMonth));
    int lastDay = endOfMonth.Day;
}

<div class="MainBody" style="padding-top:50px;width:100% !important;min-height:750px;background-image:url('http://brester.org/Background.jfif');background-size: cover;">
    <div style="text-align:center" class="Month">
        @{DateTime dtDate = new DateTime(currentDate.Year, ViewBag.currentMonth, 1);
            string sMonthName = dtDate.ToString("MMM");
            string sMonthFullName = dtDate.ToString("MMMM"); } <h1>@sMonthFullName</h1>
        </div>
        <div class="monthNav">
            <div class="lastMonth" style="float:left;">
                <form action="~/Home/Index?month=-1" method="post">
                    <input type="submit" value="<<<" class="lastMonthButton" title="last Month" />
                </form>
            </div>
            <div class="nextMonth" style="float:right">
                <form action="~/Home/Index?month=1" method="post">
                    <input type="submit" value=">>>" class="lastMonthButton" title="last Month" />
                </form>
            </div>

        </div>
        @{
            var firstDayOfMonth = new DateTime(currentDate.Year, ViewBag.currentMonth, 1).DayOfWeek;
            switch (firstDayOfMonth)
            {
                case (DayOfWeek.Monday):
                    daysToSkip = 1;
                    break;
                case (DayOfWeek.Tuesday):
                    daysToSkip = 2;
                    break;
                case (DayOfWeek.Wednesday):
                    daysToSkip = 3;
                    break;
                case (DayOfWeek.Thursday):
                    daysToSkip = 4;
                    break;
                case (DayOfWeek.Friday):
                    daysToSkip = 5;
                    break;
                case (DayOfWeek.Saturday):
                    daysToSkip = 6;
                    break;

            }

        }

        <table align="center" border="1" style="border: 2px solid black; max-width:700px">

            @{


                while (dayCounter <= lastDay)
                {
                    <tr>
                        @{
                            while (columnCounter < 7)
                            {


                                while (cellCount < daysToSkip)
                                {

                                    <td style="padding-left:5px;width:110px;height:110px;text-align: left;vertical-align: top !important;font-weight:bolder!important"></td>
                                    columnCounter++;
                                    cellCount++;
                                }
                                <td style="padding-left:5px;width:110px;height:110px;text-align: left;vertical-align: top !important;font-weight:bolder!important">
                                    @{ if (dayCounter <= lastDay)
                                        {
                                            <div style="font-weight:bolder!important">
                                                @dayCounter
                                            </div>

                                            foreach (var eventItem in ViewBag.events.events)
                                            {
                                                var day = eventItem.StartDate.ToString("dd");
                                                if (dayCounter.ToString() == eventItem.StartDate.ToString("dd").TrimStart(new Char[] { '0' }))
                                                {
                                                    eventTime = eventItem.StartDate.ToString("MM/dd/yyyy");
                                                    eventName = eventItem.StreamGame;
                                                    eventTitle = eventItem.EventName;
                                                    eventId = eventItem.EventId;
                                                    eventStartTime = eventItem.StartDate.ToString("hh: mm tt");
                                                    eventEndTime = eventItem.EndDate.ToString("hh:mm tt");


                                                    <div style="padding-top:0px;"><a href="~/Home/EventDetails?eventID=@eventId" style="color:black;font-size:12px;"><span style="font-weight:bolder">@eventTitle</span> <br />@eventName<br/>@eventStartTime - <br /> @eventEndTime</a></div>
                                                }
                                                else
                                                {

                                                    eventTime = "";
                                                    eventName = "";
                                                }
                                            }
                                        }
                                    }
                                </td>

                                columnCounter++;
                                dayCounter++;
                            }
                            columnCounter = 0;
                            rowCounter++;
                        }
                    </tr>
                }
            }
        </table>
    </div>